[{"C:\\xampp\\htdocs\\pokeapi\\src\\index.js":"1","C:\\xampp\\htdocs\\pokeapi\\src\\App.js":"2","C:\\xampp\\htdocs\\pokeapi\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\pokeapi\\src\\services\\pokemon.js":"4","C:\\xampp\\htdocs\\pokeapi\\src\\components\\Card.jsx":"5","C:\\xampp\\htdocs\\pokeapi\\src\\components\\Pokemon.jsx":"6","C:\\xampp\\htdocs\\pokeapi\\src\\components\\Index.jsx":"7"},{"size":663,"mtime":1609032461512,"results":"8","hashOfConfig":"9"},{"size":571,"mtime":1609103536891,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":1259,"mtime":1609099288058,"results":"12","hashOfConfig":"9"},{"size":1945,"mtime":1609103543374,"results":"13","hashOfConfig":"9"},{"size":3662,"mtime":1609109093725,"results":"14","hashOfConfig":"9"},{"size":7868,"mtime":1609091190604,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"5i8wth",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"C:\\xampp\\htdocs\\pokeapi\\src\\index.js",[],["33","34"],"C:\\xampp\\htdocs\\pokeapi\\src\\App.js",["35","36","37","38"],"C:\\xampp\\htdocs\\pokeapi\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\pokeapi\\src\\services\\pokemon.js",["39"],"\r\n/*Función Comentada - Se usaba con url fija, pero al usar offset y limit dinámico queda obsoleta\r\nexport async function getPokemon({ url }) {          // a getPokemon le estamos pasando como parámetro un objeto que tiene una propiedad que es url, por eso hacemos ({url})\r\n    return new Promise((resolve, reject) => {  // Para indicarle que tome del objeto que recibe el atributo que se llama url\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then(data => \r\n                resolve(data)\r\n            )\r\n    });\r\n}\r\n*/\r\n\r\nexport async function getPokemon(url) {          // a getPokemon le estamos pasando como parámetro un objeto que tiene una propiedad que es url, por eso hacemos ({url})\r\n    return new Promise((resolve, reject) => {  // Para indicarle que tome del objeto que recibe el atributo que se llama url\r\n        console.log(\"EEEEE\" + url);\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then(data => ( \r\n                resolve(data),console.log(\"EEEEE22\" + data))\r\n            )\r\n           \r\n    });\r\n}\r\n\r\nexport async function getAllPokemons(url) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then(data => resolve(data))\r\n    });\r\n}\r\n","C:\\xampp\\htdocs\\pokeapi\\src\\components\\Card.jsx",["40","41","42","43","44"],"C:\\xampp\\htdocs\\pokeapi\\src\\components\\Pokemon.jsx",["45"],"C:\\xampp\\htdocs\\pokeapi\\src\\components\\Index.jsx",["46","47","48","49","50","51","52","53","54","55","56","57","58","59","60"],"import React, {Fragment, useState, useEffect} from 'react'\r\nimport {getAllPokemons, getPokemon} from '../services/pokemon';\r\nimport Card from '../components/Card'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Link\r\n  } from 'react-router-dom';\r\n\r\nconst Index = () => {\r\n    \r\nconst[pokemonData, setPokemonData] = useState([]);\r\nconst[nextUrl, setNextUrl] = useState('');\r\nconst[prevUrl, setPrevUrl] = useState('');\r\nconst[loading, setLoading] = useState(true);\r\nconst[offset, setOffset] = useState(0);\r\nconst[limit, setLimit] = useState(10);\r\nconst[UrlsDetalles, setUrlDetalles] = useState([]);\r\nvar url = `https://pokeapi.co/api/v2/pokemon?offset=${offset}&limit=${limit}`;\r\n\r\nuseEffect(()=>{\r\n\r\n    async function fetchData(){\r\n\r\n        let response = await getAllPokemons(url);\r\n        //setNextUrl(response.next);\r\n        //setPrevUrl(response.previous);\r\n        var _UrlsDetalles = response.results.map(results=>{return results.url});\r\n        urls(_UrlsDetalles);\r\n        let responseTwo = await loadingPokemon(_UrlsDetalles);\r\n        setLoading(false)\r\n\r\n    }\r\n\r\n    fetchData();\r\n\r\n    },[])\r\n\r\n     const urls = async (data) => {\r\n        let arrayUrls = await Promise.all(data.map(async url => { \r\n            return url;                                                                                                    \r\n        }\r\n        ));\r\n        setUrlDetalles(arrayUrls);\r\n        console.log(arrayUrls);\r\n    }\r\n       \r\n\r\n   const loadingPokemon = async (data) => {\r\n        \r\n        let _pokemonData = await Promise.all(data.map(async url => {  //Promise.all sirve para que se ejecute solo si no hay promesas pendientes, es decir, \r\n            let pokemonRecord = await getPokemon(url);                //una vez que las promesas que hayan quedado en cola se resuelvan, recién ahí se ejecuta este código.\r\n            console.log(pokemonRecord);\r\n            return pokemonRecord;                                         //_pokemonData es un array, porque se usando map, recordar que ap genera un array\r\n                                                                        //Entonces cada vez que se ejecute va a ir guardando los datos en posiciones distintas sin pisarlos\r\n        }\r\n        ));\r\n        console.log(_pokemonData);\r\n        setPokemonData(_pokemonData);  //Una vez terminado el loop del map y con todos los datos guardados en el array _pokemonData, paso ese array a setPokemonData\r\n        console.log(\"POK DATA\" + pokemonData.map(result=>result.height));\r\n    }\r\n\r\n    \r\n\r\n    console.log(UrlsDetalles);\r\n\r\n    //NEXT PAGE  \r\n    const next = async () => {\r\n            \r\n            let response = await getAllPokemons(`https://pokeapi.co/api/v2/pokemon?offset=${offset+10}&limit=${limit}`) \r\n            console.log(\"Offset\" + response.results.map(result=>result.name)); // estos results, del response de la linea de arriba son los correctos, los de las siguiente pag.\r\n            console.log(\"111111111111\" + `https://pokeapi.co/api/v2/pokemon?offset=${offset+10}&limit=${limit}`);\r\n            var _UrlsDetalles = response.results.map(results=>{return results.url});\r\n            urls(_UrlsDetalles); //Acá tengo el array de urls correcto el problema era que el set dentro la función urls no producía cambios en el momento,\r\n            //sino que esos cambios se veían reflejados recién en el próximo render o al ejecutarse la siguiente vez\r\n            await loadingPokemon(_UrlsDetalles)//Aca por algún motivo se está pasando el array de urls viejos no el correcto, será que la linea de arriba no se está ejecutando\r\n            console.log(\"2222222222222\" + `https://pokeapi.co/api/v2/pokemon?offset=${offset+10}&limit=${limit}`);\r\n            console.log(UrlsDetalles);\r\n            setOffset(offset+10);\r\n            console.log(\"Offset\" + offset); // Al terminar de correr este código recién ahí se setean los nuevos arrays\r\n            //El mismo problema ocurría con el offset, al no ser inmediato el cambio del set, no se seteaba el nuevo dato, por lo que se hacía la consulta con el offset anterior,\r\n            //Luego si se actulizaba, pero siempre estaba un paso atrás, cuando offset debería ser 10 era 0 cuando debía ser 20 era 10, etc...\r\n     }\r\n\r\n    //PREVIOUS PAGE\r\n    const prev = async () => {\r\n\r\n            if(offset >= 10){\r\n                let response = await getAllPokemons(`https://pokeapi.co/api/v2/pokemon?offset=${offset-10}&limit=${limit}`) \r\n                console.log(\"Offset\" + response.results.map(result=>result.name)); // estos results, del response de la linea de arriba son los correctos, los de las siguiente pag.\r\n                console.log(\"111111111111\" + `https://pokeapi.co/api/v2/pokemon?offset=${offset-10}&limit=${limit}`);\r\n                var _UrlsDetalles = response.results.map(results=>{return results.url});\r\n                urls(_UrlsDetalles); //Acá tengo el array de urls correcto\r\n                await loadingPokemon(_UrlsDetalles)//Aca por algún motivo se está pasando el array de urls viejos no el correcto, será que la linea de arriba no se está ejecutando\r\n                console.log(\"2222222222222\" + `https://pokeapi.co/api/v2/pokemon?offset=${offset-10}&limit=${limit}`);\r\n                console.log(UrlsDetalles);\r\n                setOffset(offset-10);\r\n                console.log(\"Offset\" + offset); // Al terminar de correr este código recién ahí se setean los nuevos arrays\r\n            }\r\n    }\r\n/* Viejo loading con url fija, al cambiar a dinámica quedó obsoleto\r\n const loadingPokemon = async (data) => {\r\n        let _pokemonData = await Promise.all(data.map(async pokemon => {  //Promise.all sirve para que se ejecute solo si no hay promesas pendientes, es decir, \r\n            let pokemonRecord = await getPokemon(pokemon);                //una vez que las promesas que hayan quedado en cola se resuelvan, recién ahí se ejecuta este código.\r\n            return pokemonRecord;                                         //_pokemonData es un array, porque se usando map, recordar que ap genera un array\r\n                                                                        //Entonces cada vez que se ejecute va a ir guardando los datos en posiciones distintas sin pisarlos\r\n        }\r\n        ));\r\n\r\n        setPokemonData(_pokemonData);  //Una vez terminado el loop del map y con todos los datos guardados en el array _pokemonData, paso ese array a setPokemonData\r\n\r\n*/\r\n\r\n/*  // Funciones comentadas, se usaban con URL fija, al usar offset y limit dinámico quedó obsoleta\r\n    //NEXT PAGE  \r\n    const next = async () => {\r\n       let data = await getAllPokemons(nextUrl)\r\n       await loadingPokemon(data.results)\r\n       setNextUrl(data.next)\r\n       setPrevUrl(data.previous)\r\n    }\r\n\r\n    //PREVIOUS PAGE\r\n    const prev = async () => {\r\n        if (!prevUrl) return\r\n        let data = await getAllPokemons(prevUrl)\r\n        await loadingPokemon(data.results)\r\n        setNextUrl(data.next)\r\n        setPrevUrl(data.previous)\r\n    }\r\n*/\r\n\r\n\r\n    return ( \r\n        <Fragment>\r\n            <div className=\"container\">\r\n                {\r\n                loading ? (\r\n                    <p>Loading...</p>\r\n                ):(\r\n                    <p>Data Fetched</p>\r\n                )\r\n                }\r\n\r\n                <div className=\"row justify-content-center\">\r\n                {\r\n                    pokemonData.map((pokemon,i) => {\r\n                        return <Card key={i} pokemon={pokemon}/>\r\n                    })\r\n                }\r\n                </div>\r\n                \r\n                <button className='btn btn-primary' onClick={()=>prev()}>{'<'}</button>\r\n                <button className='btn btn-primary' onClick={()=>next()}>{'>'}</button>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default Index;\r\n\r\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":16,"nodeType":"67","messageId":"68","endLine":1,"endColumn":24},{"ruleId":"65","severity":1,"message":"69","line":1,"column":26,"nodeType":"67","messageId":"68","endLine":1,"endColumn":35},{"ruleId":"65","severity":1,"message":"70","line":6,"column":3,"nodeType":"67","messageId":"68","endLine":6,"endColumn":7},{"ruleId":"65","severity":1,"message":"71","line":10,"column":8,"nodeType":"67","messageId":"68","endLine":10,"endColumn":12},{"ruleId":"72","severity":1,"message":"73","line":20,"column":30,"nodeType":"74","messageId":"75","endLine":20,"endColumn":31},{"ruleId":"65","severity":1,"message":"76","line":3,"column":22,"nodeType":"67","messageId":"68","endLine":3,"endColumn":28},{"ruleId":"65","severity":1,"message":"77","line":4,"column":5,"nodeType":"67","messageId":"68","endLine":4,"endColumn":10},{"ruleId":"65","severity":1,"message":"78","line":5,"column":5,"nodeType":"67","messageId":"68","endLine":5,"endColumn":11},{"ruleId":"79","severity":1,"message":"80","line":21,"column":26,"nodeType":"81","endLine":21,"endColumn":68},{"ruleId":"82","severity":1,"message":"83","line":25,"column":17,"nodeType":"81","endLine":25,"endColumn":38},{"ruleId":"79","severity":1,"message":"80","line":29,"column":25,"nodeType":"81","endLine":29,"endColumn":67},{"ruleId":"65","severity":1,"message":"76","line":5,"column":22,"nodeType":"67","messageId":"68","endLine":5,"endColumn":28},{"ruleId":"65","severity":1,"message":"77","line":6,"column":5,"nodeType":"67","messageId":"68","endLine":6,"endColumn":10},{"ruleId":"65","severity":1,"message":"78","line":7,"column":5,"nodeType":"67","messageId":"68","endLine":7,"endColumn":11},{"ruleId":"65","severity":1,"message":"70","line":8,"column":5,"nodeType":"67","messageId":"68","endLine":8,"endColumn":9},{"ruleId":"65","severity":1,"message":"84","line":14,"column":7,"nodeType":"67","messageId":"68","endLine":14,"endColumn":14},{"ruleId":"65","severity":1,"message":"85","line":14,"column":16,"nodeType":"67","messageId":"68","endLine":14,"endColumn":26},{"ruleId":"65","severity":1,"message":"86","line":15,"column":7,"nodeType":"67","messageId":"68","endLine":15,"endColumn":14},{"ruleId":"65","severity":1,"message":"87","line":15,"column":16,"nodeType":"67","messageId":"68","endLine":15,"endColumn":26},{"ruleId":"65","severity":1,"message":"88","line":18,"column":14,"nodeType":"67","messageId":"68","endLine":18,"endColumn":22},{"ruleId":"65","severity":1,"message":"89","line":31,"column":13,"nodeType":"67","messageId":"68","endLine":31,"endColumn":24},{"ruleId":"90","severity":1,"message":"91","line":38,"column":7,"nodeType":"92","endLine":38,"endColumn":9,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":73,"column":40,"nodeType":"96","messageId":"97","endLine":73,"endColumn":41},{"ruleId":"94","severity":1,"message":"95","line":78,"column":41,"nodeType":"96","messageId":"97","endLine":78,"endColumn":42},{"ruleId":"94","severity":1,"message":"95","line":92,"column":44,"nodeType":"96","messageId":"97","endLine":92,"endColumn":45},{"ruleId":"94","severity":1,"message":"95","line":96,"column":45,"nodeType":"96","messageId":"97","endLine":96,"endColumn":46},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","'Card' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'nextUrl' is assigned a value but never used.","'setNextUrl' is assigned a value but never used.","'prevUrl' is assigned a value but never used.","'setPrevUrl' is assigned a value but never used.","'setLimit' is assigned a value but never used.","'responseTwo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadingPokemon' and 'url'. Either include them or remove the dependency array.","ArrayExpression",["100"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},"Update the dependencies array to be: [loadingPokemon, url]",{"range":"103","text":"104"},[1127,1129],"[loadingPokemon, url]"]