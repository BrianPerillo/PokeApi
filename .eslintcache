[{"C:\\xampp\\htdocs\\pokeapi\\src\\index.js":"1","C:\\xampp\\htdocs\\pokeapi\\src\\App.js":"2","C:\\xampp\\htdocs\\pokeapi\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\pokeapi\\src\\services\\pokemon.js":"4","C:\\xampp\\htdocs\\pokeapi\\src\\components\\Card.jsx":"5","C:\\xampp\\htdocs\\pokeapi\\src\\components\\Pokemon.jsx":"6","C:\\xampp\\htdocs\\pokeapi\\src\\components\\Index.jsx":"7"},{"size":663,"mtime":1609032461512,"results":"8","hashOfConfig":"9"},{"size":1004,"mtime":1609170557454,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":1265,"mtime":1609166103717,"results":"12","hashOfConfig":"9"},{"size":2037,"mtime":1609117379410,"results":"13","hashOfConfig":"9"},{"size":3675,"mtime":1609117366179,"results":"14","hashOfConfig":"9"},{"size":7897,"mtime":1609170468069,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"5i8wth",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\xampp\\htdocs\\pokeapi\\src\\index.js",[],["33","34"],"C:\\xampp\\htdocs\\pokeapi\\src\\App.js",["35","36","37"],"C:\\xampp\\htdocs\\pokeapi\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\pokeapi\\src\\services\\pokemon.js",[],"C:\\xampp\\htdocs\\pokeapi\\src\\components\\Card.jsx",["38","39","40","41","42"],"import React, {Fragment} from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Link\r\n  } from 'react-router-dom';\r\n\r\nconst Card = (props) => {\r\n\r\n    //Tomo el nombre del pokemon desde la prop que recibo:\r\n    const nombre = props.pokemon.forms.map(nombre => {\r\n        return (nombre.name)\r\n    })\r\n    console.log(nombre);\r\n\r\n    return ( \r\n        <Fragment>\r\n        <div class=\"col-md-2 m-3 profile-card-1\">\r\n        \r\n        <div class=\"img\"><img src={props.pokemon.sprites.front_default}/></div>\r\n        <Link to={`/${nombre}/${props.offset}/${props.limit}`} // Paso el nombre del pokemon para la URL y offset y limit para volver a última página visitada\r\n            style={{textDecoration: 'none', color:'white'}}>\r\n            <button className=\"btn btn-propio\">\r\n                <a class=\"view-more\">\r\n                 <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\r\n                </a>\r\n            </button>\r\n        </Link>\r\n        <div class=\"popup\"></div>\r\n        <div class=\"mid-section\">\r\n            <div class=\"name\">\r\n                {props.pokemon.forms.map(nombre => {\r\n                return (nombre.name)\r\n            })}\r\n            </div>\r\n            \r\n            <div class=\"description\">\r\n                <p>Tipos:</p>\r\n                {props.pokemon.types.map(type => {\r\n                return(<p style={{float:'left'}}>{type.type.name}</p>) \r\n                }\r\n                )}\r\n                <br/>\r\n            </div>\r\n            <div class=\"line\"></div>\r\n            <div class=\"stats\">\r\n            <div class=\"stat\">81.3M\r\n                <div class=\"subtext\">Favoritos</div>\r\n            </div>\r\n            <div class=\"stat\">822k\r\n                <div class=\"subtext\">Likes</div>\r\n            </div>\r\n            <div class=\"stat\">\r\n                <button>Fav</button>\r\n            </div>\r\n            </div>\r\n           \r\n        </div>\r\n       \r\n        \r\n        </div>\r\n        \r\n\r\n        </Fragment>\r\n\r\n\r\n     );\r\n}\r\n \r\nexport default Card;\r\n","C:\\xampp\\htdocs\\pokeapi\\src\\components\\Pokemon.jsx",["43","44","45"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport {useParams} from 'react-router-dom';\r\nimport {getPokemon} from '../services/pokemon'\r\n\r\nconst Pokemon = () => {\r\n\r\n    const {nombre,offset,limit} = useParams();\r\n    const [detalle, setDetalle] = useState({});\r\n    const [bool, setBool] = useState(false);\r\n    \r\n    useEffect(()=>{\r\n        console.log(nombre);\r\n        const obtenerDetalles = async () => {\r\n  \r\n            let response = await getPokemon(`https://pokeapi.co/api/v2/pokemon/${nombre}`); //Hay que usar await, porque la función realiza un pedido asyncronico\r\n            console.log(response);                                                          //entonces con el await impido que siga leyendo las lineas de codigo\r\n            setDetalle(response);                                                           //que están abajo hasta tanto no esté disponible la respuesta.\r\n            setBool(true);\r\n            \r\n        }\r\n        obtenerDetalles();\r\n        \r\n    },[nombre])\r\n\r\n    return ( \r\n\r\n            <Fragment>\r\n                {bool === true ? (                                                      \r\n                        <img src={detalle.sprites.front_default}/> \r\n                    ):(                                                                  \r\n                        <img src=\"\" alt=\"Loading...\"/>\r\n                        )                                                                  \r\n                }     \r\n                {bool === true ? ( //Uso un booleano que cambia su valor luego de que se setee detalle, para consultar justamente si está seteado, si no hago eso, sale\r\n                    <p>Nombre: {detalle.forms.map(nombre=>{return nombre.name})}</p> //error, dice que no se puede hacer un map a un undifined. Este bool cambia\r\n                ):(                                                                  //luego que se setee detalle para así evitar el error.\r\n                    <p>Nombre: Loading...</p>\r\n                )                                                                     //Eso pasa por el await, se queda esperando y no realiza el set porque hasta\r\n                }                                                                     {/*que no se resuelva no continúa leyendo el código que tiene abajo*/}\r\n                                                                                      {/*pero ese await no impide que se ejecute el return, entonces se ejecuta*/}\r\n                                                                                      {/*el return y busca datos en detalle, pero detalle todavía no fue seteado*/} \r\n                  <p>Habilidades: </p>\r\n                    {bool === true ? (                                                    \r\n                        <ul>{detalle.abilities.map(data=>{return <li>{data.ability.name}</li>})}</ul>\r\n                    ):(                                                                  \r\n                        <p>Habilidades: Loading...</p>\r\n                    )                                                                  \r\n                    }\r\n\r\n                <p>Peso: {detalle.weight}</p>                                           \r\n                <p>Altura: {detalle.height}</p>                                        \r\n                <p>Experiencia base: {detalle.base_experience}</p>  \r\n                       \r\n                                                                                        \r\n            </Fragment>                                                                 \r\n\r\n            \r\n\r\n     );\r\n}\r\n \r\nexport default Pokemon;","C:\\xampp\\htdocs\\pokeapi\\src\\components\\Index.jsx",["46","47","48","49","50","51","52","53","54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":26,"nodeType":"61","messageId":"62","endLine":1,"endColumn":35},{"ruleId":"59","severity":1,"message":"63","line":6,"column":3,"nodeType":"61","messageId":"62","endLine":6,"endColumn":7},{"ruleId":"59","severity":1,"message":"64","line":10,"column":8,"nodeType":"61","messageId":"62","endLine":10,"endColumn":12},{"ruleId":"59","severity":1,"message":"65","line":3,"column":22,"nodeType":"61","messageId":"62","endLine":3,"endColumn":28},{"ruleId":"59","severity":1,"message":"66","line":4,"column":5,"nodeType":"61","messageId":"62","endLine":4,"endColumn":10},{"ruleId":"59","severity":1,"message":"67","line":5,"column":5,"nodeType":"61","messageId":"62","endLine":5,"endColumn":11},{"ruleId":"68","severity":1,"message":"69","line":21,"column":26,"nodeType":"70","endLine":21,"endColumn":74},{"ruleId":"71","severity":1,"message":"72","line":25,"column":17,"nodeType":"70","endLine":25,"endColumn":38},{"ruleId":"59","severity":1,"message":"73","line":7,"column":19,"nodeType":"61","messageId":"62","endLine":7,"endColumn":25},{"ruleId":"59","severity":1,"message":"74","line":7,"column":26,"nodeType":"61","messageId":"62","endLine":7,"endColumn":31},{"ruleId":"68","severity":1,"message":"69","line":29,"column":25,"nodeType":"70","endLine":29,"endColumn":67},{"ruleId":"59","severity":1,"message":"65","line":5,"column":22,"nodeType":"61","messageId":"62","endLine":5,"endColumn":28},{"ruleId":"59","severity":1,"message":"66","line":6,"column":5,"nodeType":"61","messageId":"62","endLine":6,"endColumn":10},{"ruleId":"59","severity":1,"message":"67","line":7,"column":5,"nodeType":"61","messageId":"62","endLine":7,"endColumn":11},{"ruleId":"59","severity":1,"message":"75","line":15,"column":7,"nodeType":"61","messageId":"62","endLine":15,"endColumn":14},{"ruleId":"59","severity":1,"message":"76","line":15,"column":16,"nodeType":"61","messageId":"62","endLine":15,"endColumn":26},{"ruleId":"59","severity":1,"message":"77","line":16,"column":7,"nodeType":"61","messageId":"62","endLine":16,"endColumn":14},{"ruleId":"59","severity":1,"message":"78","line":16,"column":16,"nodeType":"61","messageId":"62","endLine":16,"endColumn":26},{"ruleId":"59","severity":1,"message":"79","line":45,"column":13,"nodeType":"61","messageId":"62","endLine":45,"endColumn":24},{"ruleId":"80","severity":1,"message":"81","line":52,"column":7,"nodeType":"82","endLine":52,"endColumn":21,"suggestions":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Card' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'offset' is assigned a value but never used.","'limit' is assigned a value but never used.","'nextUrl' is assigned a value but never used.","'setNextUrl' is assigned a value but never used.","'prevUrl' is assigned a value but never used.","'setPrevUrl' is assigned a value but never used.","'responseTwo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'bool', 'limitB', 'offsetB', and 'url'. Either include them or remove the dependency array.","ArrayExpression",["86"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [offset, limit, offsetB, limitB, bool, url]",{"range":"89","text":"90"},[1626,1640],"[offset, limit, offsetB, limitB, bool, url]"]