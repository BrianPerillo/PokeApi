[{"C:\\xampp\\htdocs\\pokeapi\\src\\index.js":"1","C:\\xampp\\htdocs\\pokeapi\\src\\App.js":"2","C:\\xampp\\htdocs\\pokeapi\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\pokeapi\\src\\services\\pokemon.js":"4","C:\\xampp\\htdocs\\pokeapi\\src\\components\\Card.jsx":"5","C:\\xampp\\htdocs\\pokeapi\\src\\components\\Pokemon.jsx":"6","C:\\xampp\\htdocs\\pokeapi\\src\\components\\Index.jsx":"7","C:\\xampp\\htdocs\\pokeapi\\src\\components\\CardSearch.jsx":"8"},{"size":663,"mtime":1609032461512,"results":"9","hashOfConfig":"10"},{"size":968,"mtime":1609182223677,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":1265,"mtime":1609166103717,"results":"13","hashOfConfig":"10"},{"size":2037,"mtime":1609117379410,"results":"14","hashOfConfig":"10"},{"size":3675,"mtime":1609117366179,"results":"15","hashOfConfig":"10"},{"size":12713,"mtime":1609199785920,"results":"16","hashOfConfig":"10"},{"size":2094,"mtime":1609183713939,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"5i8wth",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"C:\\xampp\\htdocs\\pokeapi\\src\\index.js",[],["39","40"],"C:\\xampp\\htdocs\\pokeapi\\src\\App.js",["41","42"],"import React, {useState, useEffect} from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link\n} from 'react-router-dom';\n\nimport Index from './components/Index';\nimport Pokemon from './components/Pokemon'\n\n\nfunction App() {\n\n  const [bool, setBool] = useState(false);\n\n  function switchIndex(){\n\n    setBool(true);\n   \n  }\n\n    //Rutas\n    //Aca hay que establecer el offset y limit para pasarlo a la ruta index\n\n  return (\n\n    <Router>\n        <Switch>\n            <Route path=\"/:nombre/:offset/:limit\">\n                <Pokemon/>\n            </Route>\n            {\n              bool ? (\n                <Route path=\"/:offsetB/:limitB\">\n                  <Index switchIndex={switchIndex}/>\n                </Route> \n              ):(              \n              <Route path=\"/\">\n                <Index switchIndex={switchIndex}/>\n              </Route>)\n            }\n\n\n\n          </Switch>\n    </Router>\n     \n    \n\n\n\n  );\n}\n\nexport default App;\n","C:\\xampp\\htdocs\\pokeapi\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\pokeapi\\src\\services\\pokemon.js",[],"C:\\xampp\\htdocs\\pokeapi\\src\\components\\Card.jsx",["43","44","45","46","47"],"import React, {Fragment} from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Link\r\n  } from 'react-router-dom';\r\n\r\nconst Card = (props) => {\r\n\r\n    //Tomo el nombre del pokemon desde la prop que recibo:\r\n    const nombre = props.pokemon.forms.map(nombre => {\r\n        return (nombre.name)\r\n    })\r\n    console.log(nombre);\r\n\r\n    return ( \r\n        <Fragment>\r\n        <div class=\"col-md-2 m-3 profile-card-1\">\r\n        \r\n        <div class=\"img\"><img src={props.pokemon.sprites.front_default}/></div>\r\n        <Link to={`/${nombre}/${props.offset}/${props.limit}`} // Paso el nombre del pokemon para la URL y offset y limit para volver a última página visitada\r\n            style={{textDecoration: 'none', color:'white'}}>\r\n            <button className=\"btn btn-propio\">\r\n                <a class=\"view-more\">\r\n                 <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\r\n                </a>\r\n            </button>\r\n        </Link>\r\n        <div class=\"popup\"></div>\r\n        <div class=\"mid-section\">\r\n            <div class=\"name\">\r\n                {props.pokemon.forms.map(nombre => {\r\n                return (nombre.name)\r\n            })}\r\n            </div>\r\n            \r\n            <div class=\"description\">\r\n                <p>Tipos:</p>\r\n                {props.pokemon.types.map(type => {\r\n                return(<p style={{float:'left'}}>{type.type.name}</p>) \r\n                }\r\n                )}\r\n                <br/>\r\n            </div>\r\n            <div class=\"line\"></div>\r\n            <div class=\"stats\">\r\n            <div class=\"stat\">81.3M\r\n                <div class=\"subtext\">Favoritos</div>\r\n            </div>\r\n            <div class=\"stat\">822k\r\n                <div class=\"subtext\">Likes</div>\r\n            </div>\r\n            <div class=\"stat\">\r\n                <button>Fav</button>\r\n            </div>\r\n            </div>\r\n           \r\n        </div>\r\n       \r\n        \r\n        </div>\r\n        \r\n\r\n        </Fragment>\r\n\r\n\r\n     );\r\n}\r\n \r\nexport default Card;\r\n","C:\\xampp\\htdocs\\pokeapi\\src\\components\\Pokemon.jsx",["48","49","50"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport {useParams} from 'react-router-dom';\r\nimport {getPokemon} from '../services/pokemon'\r\n\r\nconst Pokemon = () => {\r\n\r\n    const {nombre,offset,limit} = useParams();\r\n    const [detalle, setDetalle] = useState({});\r\n    const [bool, setBool] = useState(false);\r\n    \r\n    useEffect(()=>{\r\n        console.log(nombre);\r\n        const obtenerDetalles = async () => {\r\n  \r\n            let response = await getPokemon(`https://pokeapi.co/api/v2/pokemon/${nombre}`); //Hay que usar await, porque la función realiza un pedido asyncronico\r\n            console.log(response);                                                          //entonces con el await impido que siga leyendo las lineas de codigo\r\n            setDetalle(response);                                                           //que están abajo hasta tanto no esté disponible la respuesta.\r\n            setBool(true);\r\n            \r\n        }\r\n        obtenerDetalles();\r\n        \r\n    },[nombre])\r\n\r\n    return ( \r\n\r\n            <Fragment>\r\n                {bool === true ? (                                                      \r\n                        <img src={detalle.sprites.front_default}/> \r\n                    ):(                                                                  \r\n                        <img src=\"\" alt=\"Loading...\"/>\r\n                        )                                                                  \r\n                }     \r\n                {bool === true ? ( //Uso un booleano que cambia su valor luego de que se setee detalle, para consultar justamente si está seteado, si no hago eso, sale\r\n                    <p>Nombre: {detalle.forms.map(nombre=>{return nombre.name})}</p> //error, dice que no se puede hacer un map a un undifined. Este bool cambia\r\n                ):(                                                                  //luego que se setee detalle para así evitar el error.\r\n                    <p>Nombre: Loading...</p>\r\n                )                                                                     //Eso pasa por el await, se queda esperando y no realiza el set porque hasta\r\n                }                                                                     {/*que no se resuelva no continúa leyendo el código que tiene abajo*/}\r\n                                                                                      {/*pero ese await no impide que se ejecute el return, entonces se ejecuta*/}\r\n                                                                                      {/*el return y busca datos en detalle, pero detalle todavía no fue seteado*/} \r\n                  <p>Habilidades: </p>\r\n                    {bool === true ? (                                                    \r\n                        <ul>{detalle.abilities.map(data=>{return <li>{data.ability.name}</li>})}</ul>\r\n                    ):(                                                                  \r\n                        <p>Habilidades: Loading...</p>\r\n                    )                                                                  \r\n                    }\r\n\r\n                <p>Peso: {detalle.weight}</p>                                           \r\n                <p>Altura: {detalle.height}</p>                                        \r\n                <p>Experiencia base: {detalle.base_experience}</p>  \r\n                       \r\n                                                                                        \r\n            </Fragment>                                                                 \r\n\r\n            \r\n\r\n     );\r\n}\r\n \r\nexport default Pokemon;","C:\\xampp\\htdocs\\pokeapi\\src\\components\\Index.jsx",["51","52","53","54","55","56","57","58","59","60","61","62","63"],"C:\\xampp\\htdocs\\pokeapi\\src\\components\\CardSearch.jsx",["64","65","66","67","68"],"import React, {Fragment} from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Link\r\n  } from 'react-router-dom';\r\n\r\n\r\nconst CardSearch = (props) => {\r\n\r\nconst nombre = props.pokemonData.forms.map(name=>name.name);\r\n\r\n    return ( \r\n        <Fragment>\r\n\r\n        <div class=\"col-md-2 m-3 profile-card-1\">\r\n        \r\n            <div class=\"img\"><img src={props.pokemonData.sprites.front_default}/></div>\r\n            <Link to={`/${nombre}/${props.offset}/${props.limit}`} // Paso el nombre del pokemon para la URL y offset y limit para volver a última página visitada\r\n                style={{textDecoration: 'none', color:'white'}}>\r\n                <button className=\"btn btn-propio\">\r\n                    <a class=\"view-more\">\r\n                    <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\r\n                    </a>\r\n                </button>\r\n            </Link>\r\n            <div class=\"popup\"></div>\r\n            <div class=\"mid-section\">\r\n                <div class=\"name\">\r\n                    {props.pokemonData.forms.map(nombre => {\r\n                    return (nombre.name)\r\n                })}\r\n                </div>\r\n                \r\n                <div class=\"description\">\r\n                    <p>Tipos:</p>\r\n                    {props.pokemonData.types.map(type => {\r\n                    return(<p style={{float:'left'}}>{type.type.name}</p>) \r\n                    }\r\n                    )}\r\n                    <br/>\r\n                </div>\r\n                <div class=\"line\"></div>\r\n                <div class=\"stats\">\r\n                <div class=\"stat\">81.3M\r\n                    <div class=\"subtext\">Favoritos</div>\r\n                </div>\r\n                <div class=\"stat\">822k\r\n                    <div class=\"subtext\">Likes</div>\r\n                </div>\r\n                <div class=\"stat\">\r\n                    <button>Fav</button>\r\n                </div>\r\n                </div>\r\n            \r\n            </div>\r\n        \r\n        \r\n        </div>\r\n        \r\n\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default CardSearch;",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":26,"nodeType":"75","messageId":"76","endLine":1,"endColumn":35},{"ruleId":"73","severity":1,"message":"77","line":6,"column":3,"nodeType":"75","messageId":"76","endLine":6,"endColumn":7},{"ruleId":"73","severity":1,"message":"78","line":3,"column":22,"nodeType":"75","messageId":"76","endLine":3,"endColumn":28},{"ruleId":"73","severity":1,"message":"79","line":4,"column":5,"nodeType":"75","messageId":"76","endLine":4,"endColumn":10},{"ruleId":"73","severity":1,"message":"80","line":5,"column":5,"nodeType":"75","messageId":"76","endLine":5,"endColumn":11},{"ruleId":"81","severity":1,"message":"82","line":21,"column":26,"nodeType":"83","endLine":21,"endColumn":74},{"ruleId":"84","severity":1,"message":"85","line":25,"column":17,"nodeType":"83","endLine":25,"endColumn":38},{"ruleId":"73","severity":1,"message":"86","line":7,"column":19,"nodeType":"75","messageId":"76","endLine":7,"endColumn":25},{"ruleId":"73","severity":1,"message":"87","line":7,"column":26,"nodeType":"75","messageId":"76","endLine":7,"endColumn":31},{"ruleId":"81","severity":1,"message":"82","line":29,"column":25,"nodeType":"83","endLine":29,"endColumn":67},{"ruleId":"73","severity":1,"message":"78","line":6,"column":22,"nodeType":"75","messageId":"76","endLine":6,"endColumn":28},{"ruleId":"73","severity":1,"message":"79","line":7,"column":5,"nodeType":"75","messageId":"76","endLine":7,"endColumn":10},{"ruleId":"73","severity":1,"message":"80","line":8,"column":5,"nodeType":"75","messageId":"76","endLine":8,"endColumn":11},{"ruleId":"73","severity":1,"message":"88","line":18,"column":7,"nodeType":"75","messageId":"76","endLine":18,"endColumn":14},{"ruleId":"73","severity":1,"message":"89","line":18,"column":16,"nodeType":"75","messageId":"76","endLine":18,"endColumn":26},{"ruleId":"73","severity":1,"message":"90","line":19,"column":7,"nodeType":"75","messageId":"76","endLine":19,"endColumn":14},{"ruleId":"73","severity":1,"message":"91","line":19,"column":16,"nodeType":"75","messageId":"76","endLine":19,"endColumn":26},{"ruleId":"73","severity":1,"message":"92","line":20,"column":7,"nodeType":"75","messageId":"76","endLine":20,"endColumn":14},{"ruleId":"73","severity":1,"message":"93","line":26,"column":7,"nodeType":"75","messageId":"76","endLine":26,"endColumn":16},{"ruleId":"73","severity":1,"message":"94","line":31,"column":18,"nodeType":"75","messageId":"76","endLine":31,"endColumn":24},{"ruleId":"73","severity":1,"message":"95","line":31,"column":40,"nodeType":"75","messageId":"76","endLine":31,"endColumn":48},{"ruleId":"96","severity":1,"message":"97","line":51,"column":7,"nodeType":"98","endLine":51,"endColumn":21,"suggestions":"99"},{"ruleId":"73","severity":1,"message":"100","line":60,"column":13,"nodeType":"75","messageId":"76","endLine":60,"endColumn":24},{"ruleId":"73","severity":1,"message":"78","line":3,"column":22,"nodeType":"75","messageId":"76","endLine":3,"endColumn":28},{"ruleId":"73","severity":1,"message":"79","line":4,"column":5,"nodeType":"75","messageId":"76","endLine":4,"endColumn":10},{"ruleId":"73","severity":1,"message":"80","line":5,"column":5,"nodeType":"75","messageId":"76","endLine":5,"endColumn":11},{"ruleId":"81","severity":1,"message":"82","line":19,"column":30,"nodeType":"83","endLine":19,"endColumn":82},{"ruleId":"84","severity":1,"message":"85","line":23,"column":21,"nodeType":"83","endLine":23,"endColumn":42},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'offset' is assigned a value but never used.","'limit' is assigned a value but never used.","'nextUrl' is assigned a value but never used.","'setNextUrl' is assigned a value but never used.","'prevUrl' is assigned a value but never used.","'setPrevUrl' is assigned a value but never used.","'loading' is assigned a value but never used.","'urlsTipos' is assigned a value but never used.","'errors' is assigned a value but never used.","'setValue' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'bool', 'fetchData', 'limitB', 'offsetB', and 'url'. Either include them or remove the dependency array.","ArrayExpression",["103"],"'responseTwo' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},"Update the dependencies array to be: [offset, limit, offsetB, limitB, bool, fetchData, url]",{"range":"106","text":"107"},[1576,1590],"[offset, limit, offsetB, limitB, bool, fetchData, url]"]